///////////////////////////////////////////////////////////
//  CoreModule.cs
//  Implementation of the Class CoreModule
//  Generated by Enterprise Architect
//  Created on:      31-Mar-2014 11:49:54 PM
///////////////////////////////////////////////////////////

using System;
using System.Windows.Threading;
using ARM.Core.Interfaces;
using ARM.Core.Module;
using ARM.Core.MVVM;
using ARM.Core.Service;
using ARM.Core.Validation;
using Microsoft.Practices.Prism.Events;
using Microsoft.Practices.Prism.Regions;
using Microsoft.Practices.Unity;

namespace ARM.Core
{
    public class CoreModule : ARMBaseModule
    {
        public CoreModule(IRegionManager regionManager, IUnityContainer unityContainer,
            IEventAggregator eventAggregator)
            : base(regionManager, unityContainer, eventAggregator)
        {
        }

        protected override void RegistreInterfaces()
        {
            base.RegistreInterfaces();
            UnityContainer.RegisterType<IARMToolboxViewModel, ARMToolboxBase>();
            UnityContainer.RegisterType<IARMValidationAdaptor, ARMValidationAdaptor>();
        }

        protected override void InternalInitialize()
        {
            base.InternalInitialize();
            Dispatcher.CurrentDispatcher.BeginInvoke(new Action(() => ARMModelsPropertyCache.Instance.Initialize()));
        }
    }//end CoreModule
}//end namespace ARM.Core