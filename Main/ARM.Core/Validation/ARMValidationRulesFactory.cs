///////////////////////////////////////////////////////////
//  ARMValidationRulesFactory.cs
//  Implementation of the Class ARMValidationRulesFactory
//  Generated by Enterprise Architect
//  Created on:      29-Mar-2014 4:59:44 PM
///////////////////////////////////////////////////////////

using System;
using ARM.Core.Attributes;
using ARM.Core.Interfaces;
using ARM.Core.Validation.Rules;

namespace ARM.Core.Validation
{
  /// <summary>
  ///Фабрики для створення правил перевірки примірників.
  /// </summary>
    public class ARMValidationRulesFactory
    {

      /// <summary>
      /// Ініціалізує новий екземпляр класу <see cref="ARMValidationRulesFactory"/>.
      /// </summary>
        protected ARMValidationRulesFactory()
        {
        }

        private static readonly Lazy<ARMValidationRulesFactory> _instance = new Lazy<ARMValidationRulesFactory>(() => new ARMValidationRulesFactory());

        /// <summary>
        /// Отримує екземпляр.
        /// </summary>
        public static ARMValidationRulesFactory Instance
        {
            get { return _instance.Value; }
        }

        /// <summary>
        /// Отримує правило.
        /// </summary>
        /// <param name="attr">Атрибут валідації.</param>
        /// <returns></returns>
        public IARMValidationRule GetRule(IARMValidationAttribute attr)
        {
            if (attr is ARMMaxAttribute)
            {
                var maxAttr = attr as ARMMaxAttribute;
                return new ARMMaxValidationRule(maxAttr.Min,maxAttr.Max);
            }
            if (attr is ARMMinAttribute)
            {
                var minAttr = attr as ARMMinAttribute;
                return new ARMMinValidationRule(minAttr.Min,minAttr.Max);
            }
            if (attr is ARMRangeAttribute)
            {
                var rangeAttr = attr as ARMRangeAttribute;
                return new ARMRangeValidationRule(rangeAttr.Min,rangeAttr.Max);
            }
            if (attr is ARMEmailAttribute)
            {
                var emailAttr = attr as ARMEmailAttribute;
                return new ARMEmailValidationRule();
            }
            if (attr is ARMMobilPhoneAttribute)
            {
                var mobileAttr = attr as ARMMobilPhoneAttribute;
                return new ARMMobilPhoneValidationRule();
            }
            if (attr is ARMUrlAttribute)
            {
                var urlAttr = attr as ARMUrlAttribute;
                return new ARMUrlValidationRule();
            }
            return null;
        }

        /// <summary>
        /// Отримує правило валідації для ссилочних типів.
        /// </summary>
        /// <returns></returns>
        public IARMValidationRule GetRuleForReferenceType()
        {
            return new ARMReferenceValidationRule();
        }

        /// <summary>
        /// Отримує правило валідації для типів значень.
        /// </summary>
        /// <returns></returns>
        public IARMValidationRule GetRuleForValuableType()
        {
            return new ARMValuableValidationRule();
        }

    }//end ARMValidationRulesFactory
}//end namespace Validation