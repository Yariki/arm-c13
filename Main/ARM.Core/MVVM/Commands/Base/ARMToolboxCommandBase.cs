///////////////////////////////////////////////////////////
//  ARMToolboxCommandBase.cs
//  Implementation of the Class ARMToolboxCommandBase
//  Generated by Enterprise Architect
//  Created on:      01-Apr-2014 12:36:35 AM
///////////////////////////////////////////////////////////

using System;
using ARM.Core.Enums;
using ARM.Core.Interfaces;

namespace ARM.Core.MVVM.Commands.Base
{
  /// <summary>
  /// Базовий клас для всієї команди панелі інструментів.
  /// </summary>
    public class ARMToolboxCommandBase : IARMToolboxCommand
    {
        private Action<ToolbarCommand> _action;
        private Func<ToolbarCommand,bool> _predicate;

        /// <summary>
        /// Ініціалізує новий екземпляр класу <see cref="ARMToolboxCommandBase"/>.
        /// </summary>
        /// <param name="action">Дія.</param>
        /// <param name="predicate">Предикат.</param>
        public ARMToolboxCommandBase(Action<ToolbarCommand> action, Func<ToolbarCommand, bool> predicate)
        {
            _action = action;
            _predicate = predicate;
        }

        /// <summary>
        /// Ініціалізує новий екземпляр класу <see cref="ARMToolboxCommandBase"/>.
        /// </summary>
        /// <param name="action">Дія.</param>
        public ARMToolboxCommandBase(Action<ToolbarCommand> action)
            :this(action,null)
        {

        }

        /// <summary>
        /// Отримує шлях зображення.
        /// </summary>
        /// <returns></returns>
        protected virtual string GetImagePath()
        {
            return "";
        }

        /// <summary>
        /// Отримує ім'я ресурсу.
        /// </summary>
        /// <returns></returns>
        protected virtual string GetResourceName()
        {
            return "";
        }

        /// <summary>
        /// Отримує підказку.
        /// </summary>
        /// <returns></returns>
        protected virtual string GetTooltip()
        {
            return "";
        }

        /// <summary>
        /// Визначає порядок.
        /// </summary>
        /// <returns></returns>
        protected virtual int GetOrder()
        {
            return 0;
        }

        /// <summary>
        /// Отримує тег.
        /// </summary>
        /// <returns></returns>
        protected virtual object GetTag()
        {
            return null;
        }

        /// <summary>
        /// Визначає метод, який буде викликатися при виклику команди.
        /// </summary>
        /// <param name="parameter">Дані, що використовуються командою. Якщо команда не вимагає дані повинні бути передані, цей об'єкт може бути встановлений в нуль.</param>
        public void Execute(object parameter)
        {
            if(_action == null)
                return;
            _action(Type);
        }

        /// <summary>
        /// Визначає метод, який визначає, чи може команда виконуватися в її поточному стані.
        /// </summary>
        /// <param name="parameter">Дані, що використовуються командою. Якщо команда не вимагає дані повинні бути передані, цей об'єкт може бути встановлений в нуль.</param>
        /// <returns>
        /// true, якщо ця команда може бути виконана; в іншому випадку, false.
        /// </returns>
        public bool CanExecute(object parameter)
        {
            return _predicate != null && _predicate(Type);
        }

        /// <summary>
        /// Відбувається, коли зміни відбуваються, які впливають, чи повинен команда виконати.
        /// </summary>
        public event EventHandler CanExecuteChanged;

        /// <summary>
        /// Заголовок команди
        /// </summary>
        public string Title { get; protected set; }
        /// <summary>
        /// Картинка команди
        /// </summary>
        public string Image { get { return GetImagePath(); } }

        /// <summary>
        /// Імя ресурсу
        /// </summary>
        public string ResourceName { get { return GetResourceName(); } }

        /// <summary>
        /// Підказка команди
        /// </summary>
        public string Tooltip { get { return GetTooltip(); } }

        /// <summary>
        /// Додатковий аргумент.
        /// </summary>
        public object Tag { get { return GetTag(); } }

        public ToolbarCommand Type { get; protected set; }

        /// <summary>
        /// Порядок відображення.
        /// </summary>
        public int Order { get { return GetOrder(); } }
    }//end ARMToolboxCommandBase
}//end namespace Base