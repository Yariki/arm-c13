///////////////////////////////////////////////////////////
//  IContext.cs
//  Implementation of the Interface IContext
//  Generated by Enterprise Architect
//  Created on:      29-Mar-2014 5:16:41 PM
///////////////////////////////////////////////////////////

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using ARM.Data.Models;

namespace ARM.Data.Layer.Interfaces
{
    /// <summary>
    /// Інтерфейс контекстуу БД
    /// </summary>
    /// <typeparam name="T">Тип моделі даних</typeparam>
    public interface IContext<T> : IDisposable where T : class
    {
        /// <summary>
        /// Отримує всі записи.
        /// </summary>
        /// <returns></returns>
        IDbSet<T> GetItems();

        /// <summary>
        /// Зберігання змін в БД.
        /// </summary>
        void Save();

        /// <summary>
        /// Оновлення обєкту в БД.
        /// </summary>
        /// <param name="obj">The object.</param>
        void Update(T obj);

        /// <summary>
        /// Оновлення даних, перезавантаження з сервера.
        /// </summary>
        void Refresh();

        /// <summary>
        /// Повертай звязану з записом внутрішню модель EF.
        /// </summary>
        /// <param name="e">The e.</param>
        /// <returns></returns>
        DbEntityEntry<T> Entry(T e);

        /// <summary>
        /// Повертає дані обраного типу.
        /// </summary>
        /// <typeparam name="TObj">The type of the object.</typeparam>
        /// <returns></returns>
        DbSet<TObj> Set<TObj>() where TObj : BaseModel;
    } //end IContext
} //end namespace Interfaces